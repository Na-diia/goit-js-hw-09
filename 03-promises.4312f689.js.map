{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAMA,SAASC,EAAcC,EAAUC,GACf,IAAIC,SAAQ,SAACC,EAASC,GACtC,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAS,CAACM,SAAAT,EAAUU,MAAAT,IAEpBG,EAAQ,CAACK,SAAAT,EAAUU,MAAAT,G,GAEpBA,E,IAGIU,MAAK,SAAAC,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MACzBG,EAAAhB,GAASiB,OAAOC,QAAQ,uBAAwCC,OAAfP,EAAS,QAAYO,OAANN,EAAM,M,IAEvEO,OAAM,SAAAL,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MAClBG,EAAAhB,GAASiB,OAAOI,QAAQ,sBAAqCF,OAAfP,EAAS,QAAYO,OAANN,EAAM,M,KApBxD,CACXS,KAAKC,SAASC,cAAc,WAoCzBF,KAAKG,iBAAiB,UAb3B,SAAsBC,GACpBA,EAAMC,iBAMN,IAJA,IAAMC,EAAYF,EAAMG,OAAOhB,MAAMiB,cAC/BC,EAAWL,EAAMG,OAAOG,KAAKF,cAG1BlB,GAFUc,EAAMG,OAAOI,OAAOH,cAEnB,GAAGlB,EAAW,EAAGA,GAAW,EAC9CV,EAAcU,EAAUgB,GACxBA,GAAaG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form:document.querySelector('.form'),\n};\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n  const shouldResolve = Math.random() > 0.3;\n  setTimeout(() => {\n    if (shouldResolve) {\n      resolve( {position, delay})\n    } else {\n      reject( {position, delay})\n    }\n  }, delay) \n});\n\n promise.then(({ position, delay }) => {\n  Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n.catch(({ position, delay }) => {\n  Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n});  \n};\n\nfunction onSubmitForm(event) {\n  event.preventDefault();\n  \n  const delayForm = event.target.delay.valueAsNumber;\n  const stepForm = event.target.step.valueAsNumber;\n  const amountForm = event.target.amount.valueAsNumber;\n\n  for (let position = 0; position > 0; position +=1 ) {\n    createPromise(position, delayForm);\n    delayForm += stepForm;\n  }\n};\n\nrefs.form.addEventListener('submit', onSubmitForm);"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position1","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","position","delay","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","form","document","querySelector","addEventListener","event","preventDefault","delayForm","target","valueAsNumber","stepForm","step","amount"],"version":3,"file":"03-promises.4312f689.js.map"}